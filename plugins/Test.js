let handler = async (m, { conn, args, isOwner, command }) => {
  // Solo el owner puede generar codes
  if (!isOwner) throw 'Este comando solo es para el *owner* del bot.'

  // Intenta generar c√≥digo de emparejamiento (nuevo m√©todo Baileys)
  if (typeof conn.requestPairingCode === 'function') {
    try {
      let code = await conn.requestPairingCode(conn.user.id.split(':')[0])
      code = code.match(/.{1,4}/g)?.join("-")
      let pasos = `*Ô∏∞ûã≠ÍØ≠ü©µ CONEXI√ìN PREMIUM*\n\n‚îÅ‚ßΩ MODO C√ìDIGO\n\n‚ú∞ Pasos de vinculaci√≥n:\n‚û™ Ve a la esquina superior derecha en WhatsApp.\n‚û™ Toca en *Dispositivos vinculados*.\n‚û™ Selecciona *Vincular con el n√∫mero de tel√©fono*.\n‚û™ Pega el c√≥digo que te enviar√© en el siguiente mensaje.\n\n‚òÖ Nota: Este c√≥digo solo funciona en el n√∫mero que lo solicit√≥.`
      await m.reply(pasos)
      await m.reply(`*C√≥digo de vinculaci√≥n:*\n${code}`)
      return
    } catch (e) {
      await m.reply('No se pudo generar pairing code. Prueba desde la consola o usa QR.')
      return
    }
  }

  // Si no existe requestPairingCode, muestra el QR (antiguo)
  if (typeof conn?.ev?.emit === 'function') {
    await m.reply('Escanea este QR en WhatsApp Web en *Dispositivos vinculados* (tienes 30 seg)...')
    conn.ev.emit('creds.update', conn.authState.creds)
    // El QR aparecer√° en la consola donde iniciaste el bot
    return
  }

  await m.reply('Tu Baileys no soporta pairing code ni QR desde comandos.')
}

handler.help = ['qrpremium', 'codepremium']
handler.tags = ['owner']
handler.command = ['codepremium', 'qrpremium']
handler.owner = true

export default handler